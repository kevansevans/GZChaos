class GZC_EffectDisplay : EventHandler
{
	bool hiddenEffect;
	
	GZC_EventHandler root;
	GZC_EventList list;
	
	override void newGame()
	{
		hiddenEffect = false;
		
		SetOrder(2);
	}
	
	override void WorldTick()
	{
		if (!root) getRootHandler();
	}
	
	override void RenderOverlay(RenderEvent event)
	{
		let effects = root.effects;
		if (!effects) return;
		
		double scaley = double(Screen.getHeight()) / 1440.0;
		
		if (effects.events.size() > 0)
		{
			int yOffset = 150;
			for (int i = 0; i < effects.events.size(); ++i)
			{
				if (hiddenEffect && !(effects.events[i] is "GZC_HideTimerAndEffects")) continue;
			
				GZC_Event effect = effects.events[i];
				int fontcolor = Font.CR_White;
				
				if (effect.life > effect.duration || effect.type != E_Timed) fontcolor = Font.CR_DarkGray;
				if (effect.life < 35) fontcolor = Font.CR_Yellow;
				
				Screen.DrawText(BIGFONT, fontcolor, 20 * scaley, (yoffset - 20) * scaley, effect.eventname, DTA_ScaleX, 1.5 * scaley, DTA_ScaleY, 1.5 * scaley);
				if (effect.type == E_Timed && effect.life < effect.duration)
				{
					double ratio = 1 - (double(effect.life) / double(effect.duration));
					yOffset += 10;
					Screen.DrawThickLine(20 * scaley, yOffset * scaley, 20 + (200 * ratio * scaley), yOffset * scaley, 10, color("FF0000"), 255);
				}
				yOffset += 60;
			}
		}
	}
	
	void getRootHandler()
	{
		root = GZC_EventHandler(StaticEventHandler.find('GZC_EventHandler'));
		list = root.list;
	}
}

Class GZC_TimerDisplay : EventHandler
{
	bool hiddenEffect;

	GZC_EventHandler root;
	GZC_EventList list;
	
	int selectedColor;
	TextureID bar;
	
	static const string texnames[] = {
		"GREEN",
		"RED",
		"BLUE",
		"PINK",
		"YELLOW",
		"CYAN",
		"WHITE",
		"LGBT",
		"LESBI",
		"BISEX",
		"PANSEX",
		"TRANS",
		"ACE",
		"NONBI",
		"FIREBLU1"
	};
	
	int timelimit;

	override void onRegister()
	{
		SetOrder(200);
		
		selectedColor = -1;
		
		updateBar(0);
	}
	
	override void WorldTick()
	{
		if (!root) getRootHandler();
		
		timelimit = list.timelimit();
		
		Cvar cvarColor = Cvar.getCvar("GZC_TimerColor", players[consoleplayer]);
		if (cvarcolor)
		{
			int selection = cvarcolor.getInt();
			if (selection != selectedColor)
			{
				selectedColor = selection;
				updateBar(selectedColor);
			}
		}
	}
	
	void updateBar(int _selected)
	{
		bar = TexMan.CheckForTexture(texnames[_selected]);
	}

	override void RenderUnderlay(RenderEvent event)
	{
		if (!root) return;
	
		if (!hiddenEffect)
		{
			double ratio = root.timer / timeLimit;
			double width = ratio * double(Screen.getWidth());
			int tWidth, tHeight = TexMan.GetSize(bar);
			Screen.SetClipRect(0, 0, int(width), 10);
			Screen.drawTexture(bar, true, 0, 0, DTA_DestWidth, Screen.getWidth(), DTA_DestHeight, tHeight);
			Screen.clearClipRect();
		}
	}
	
	void getRootHandler()
	{
		root = GZC_EventHandler(StaticEventHandler.find('GZC_EventHandler'));
		list = root.list;
	}
}