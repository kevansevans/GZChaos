class GZC_EffectDisplay : EventHandler
{
	bool hiddenEffect;
	
	GZC_EventHandler root;
	GZC_EventList list;
	
	override void newGame()
	{
		hiddenEffect = false;
		
		SetOrder(2);
	}
	
	override void WorldTick()
	{
		if (!root) getRootHandler();
	}
	
	override void RenderOverlay(RenderEvent event)
	{
		let effects = root.effects;
		if (!effects) return;
		
		double scaley = double(Screen.getHeight()) / 1440.0;
		
		if (effects.events.size() > 0)
		{
			int yOffset = 150;
			for (int i = 0; i < effects.events.size(); ++i)
			{
				if (hiddenEffect && !(effects.events[i] is "GZC_HideTimerAndEffects")) continue;
			
				GZC_Event effect = effects.events[i];
				int fontcolor = Font.CR_White;
				
				if (effect.life > effect.duration || effect.type != E_Timed) fontcolor = Font.CR_DarkGray;
				if (effect.life < 35) fontcolor = Font.CR_Yellow;
				
				Screen.DrawText(BIGFONT, fontcolor, 20 * scaley, (yoffset - 20) * scaley, effect.eventname, DTA_ScaleX, 1.5 * scaley, DTA_ScaleY, 1.5 * scaley);
				if (effect.type == E_Timed && effect.life < effect.duration)
				{
					double ratio = 1 - (double(effect.life) / double(effect.duration));
					yOffset += 10;
					Screen.DrawThickLine(20 * scaley, yOffset * scaley, 20 + (200 * ratio * scaley), yOffset * scaley, 10, color("FF0000"), 255);
				}
				yOffset += 60;
			}
		}
	}
	
	void getRootHandler()
	{
		root = GZC_EventHandler(StaticEventHandler.find('GZC_EventHandler'));
		list = root.list;
	}
}

Class GZC_TimerDisplay : EventHandler
{
	bool hiddenEffect;
	
	GZC_EventHandler root;
	GZC_EventList list;
	GZC_TimerBar activebar;
	
	int timelimit;

	override void onRegister()
	{
		SetOrder(200);
		
		Cvar cvarTimerBar = Cvar.getCvar("GZC_TimerBarClassName", players[consoleplayer]);
		string classname = cvarTimerBar.getString();
		Class<GZC_TimerBar> bar = classname;
		
		if (bar)
		{
			activeBar = GZC_TimerBar(new(classname));
			activeBar.initBar();
			return;
		}
		
		activeBar = new('GZC_TimerBar_Green');
		activeBar.initBar();
		cvarTimerBar.setString('GZC_TimerBar_Green');
		
	}
	
	void getRootHandler()
	{
		root = GZC_EventHandler(StaticEventHandler.find('GZC_EventHandler'));
		list = root.list;
	}
	
	override void WorldTick()
	{
		if (!root) getRootHandler();
		
		timelimit = list.timelimit();
	
		Cvar cvarTimerBar = Cvar.getCvar("GZC_TimerBarClassName", players[consoleplayer]);
		
		if (activebar.getClassName() == cvarTimerBar.getString()) return;
		else
		{
			string classname = cvarTimerBar.getString();
			Class<GZC_TimerBar> bar = classname;
		
			if (bar)
			{
				activeBar = GZC_TimerBar(new(classname));
				activeBar.initBar();
				return;
			}
		}
		
		activeBar = new('GZC_TimerBar_Green');
		activeBar.initBar();
		cvarTimerBar.setString('GZC_TimerBar_Green');
	}

	override void RenderUnderlay(RenderEvent event)
	{
		if (!root) return;
	
		if (!hiddenEffect)
		{
			activeBar.drawBar(root.timer, timelimit);
		}
	}
}