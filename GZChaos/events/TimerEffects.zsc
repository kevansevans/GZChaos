Class GZC_ShuffleEffectLife : GZC_Event
{
	override void eventFunc()
	{
		PlayerPawn player = players[consoleplayer].mo;
		EffectInventory effects = EffectInventory(player.findInventory("EffectInventory"));
		
		for (int i = 0; i < effects.events.size(); ++i)
		{
			GZC_Event event = effects.events[i];
			
			if (event is "GZC_AddTimeToEffects") continue;
			if (event.life >= event.duration || event.type != E_Timed) continue;
			
			event.life = random(0, event.duration);
		}
	}
	
	override void init()
	{
		eventname = "Randomize all active effect progression";
		duration = 35 * 60 * 3;
		type = E_Instant;
	}
}

Class GZC_SubTimeToEffects : GZC_Event
{
	int seconds;
	
	override void eventFunc()
	{
		PlayerPawn player = players[consoleplayer].mo;
		EffectInventory effects = EffectInventory(player.findInventory("EffectInventory"));
		
		for (int i = 0; i < effects.events.size(); ++i)
		{
			GZC_Event event = effects.events[i];
			
			if (event is "GZC_AddTimeToEffects") continue;
			if (event.life >= event.duration || event.type != E_Timed) continue;
			
			event.duration -= 35 * seconds;
		}
	}

	override void init()
	{
		seconds = random(5, 30);
		eventname = "Remove " .. seconds .. " seconds to all effects";
		duration = 35 * 60 * 3;
		type = E_Instant;
	}
}

Class GZC_AddTimeToEffects : GZC_Event
{
	int seconds;
	
	override void eventFunc()
	{
		PlayerPawn player = players[consoleplayer].mo;
		EffectInventory effects = EffectInventory(player.findInventory("EffectInventory"));
		
		for (int i = 0; i < effects.events.size(); ++i)
		{
			GZC_Event event = effects.events[i];
			
			if (event is "GZC_AddTimeToEffects") continue;
			if (event.life >= event.duration || event.type != E_Timed) continue;
			
			event.duration += 35 * seconds;
		}
	}

	override void init()
	{
		seconds = random(5, 30);
		eventname = "Add " .. seconds .. " seconds to all effects";
		duration = 35 * 60 * 3;
		type = E_Instant;
	}
}

Class GZC_TimerEffect : GZC_Event
{
	override bool verify()
	{
		bool result = Super.verify();
	
		PlayerPawn player = players[consoleplayer].mo;
		EffectInventory effects = EffectInventory(player.findInventory("EffectInventory"));
		
		for (int i = 0; i < effects.events.size(); ++i)
		{
			GZC_Event event = effects.events[i];
			if (event is "GZC_TimerEffect") return false;
		}
		
		return result;
	}
}

Class GZC_KillsExtend : GZC_TimerEffect
{
	override void deathFunc(Actor _mo)
	{
		let player = players[consoleplayer].mo;
		let effects = EffectInventory(player.findInventory("EffectInventory"));
		let def = getDefaultByType(_mo.getClass());
		
		int rate = 35 * max(1, int(def.health / 35));
		
		foreach (event : effects.events)
		{
			if (event is 'GZC_KillsExtend') continue;
		
			event.life -= rate;
			if (event.life < 0) event.life = 0;
		}
	}

	override void init()
	{
		eventname = "Kills extend effect duration";
		duration = 35 * 60 * 3;
		type = E_Timed;
	}
}

Class GZC_KillsReduce : GZC_TimerEffect
{
	override void init()
	{
		eventname = "Kills reduce effect duration";
		duration = 35 * 60 * 3;
		type = E_Timed;
	}
	
	override void deathFunc(Actor _mo)
	{
		let player = players[consoleplayer].mo;
		let effects = EffectInventory(player.findInventory("EffectInventory"));
		let def = getDefaultByType(_mo.getClass());
		
		int rate = 35 * max(1, int(def.health / 35));
		
		foreach (event : effects.events)
		{
			if (event is 'GZC_KillsReduce') continue;
		
			event.life += rate;
		}
	}
}

Class GZC_KillsAccelerate : GZC_TimerEffect
{
	override void deathFunc(Actor _mo)
	{
		if (!_mo.bIsMonster) return;
		
		let player = players[consoleplayer].mo;
		let def = getDefaultByType(_mo.getClass());
		
		player.giveInventory('TimerToken', def.health);
	}
	
	override void init()
	{
		eventname = "Kills add time";
		duration = 35 * 60 * 3;
		type = E_Timed;
	}
}

Class GZC_KillsDecelerate : GZC_TimerEffect
{
	override void deathFunc(Actor _mo)
	{
		if (!_mo.bIsMonster) return;
		
		let player = players[consoleplayer].mo;
		let def = getDefaultByType(_mo.getClass());
		
		player.takeInventory('TimerToken', def.health);
	}
	
	override void init()
	{
		eventname = "Kills subtract time";
		duration = 35 * 60 * 3;
		type = E_Timed;
	}
}

Class GZC_SuperHot : GZC_TimerEffect
{
	override void eventFunc()
	{
		let event = GZC_Event.fetch();
		event.timermode = E_SuperHot;
	}
	
	override void closeFunc()
	{
		let event = GZC_Event.fetch();
		event.timermode = E_Normal;
	}
	
	override void init()
	{
		eventname = "SUPER HOT";
		duration = 35 * 30;
		type = E_Timed;
	}
}

Class GZC_QuarterTimerDuration : GZC_TimerEffect
{
	override void eventFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 0.25;
	}
	
	override void closeFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 1.0;
	}
	
	override void init()
	{
		eventname = "4x timer speed";
		duration = 35 * 60;
		type = E_Timed;
	}
}

Class GZC_HalfTimerDuration : GZC_TimerEffect
{
	override void eventFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 0.5;
	}
	
	override void closeFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 1.0;
	}
	
	override void init()
	{
		eventname = "2x timer speed";
		duration = 35 * 60 * 2;
		type = E_Timed;
	}
}

Class GZC_DoubleTimerDuration : GZC_TimerEffect
{
	override void eventFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 2.0;
	}
	
	override void closeFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 1;
	}
	
	override void init()
	{
		eventname = "1/2 timer speed";
		duration = 35 * 60 * 5;
		type = E_Timed;
	}
}

Class GZC_TimerRunsOnKills : GZC_TimerEffect
{
	override void eventFunc()
	{
		let event = GZC_Event.fetch();
		event.timermode = E_PerKill;
	}
	
	override void closeFunc()
	{
		let event = GZC_Event.fetch();
		event.timermode = E_Normal;
	}
	
	override void init()
	{
		eventname = "1 kill = 1 second";
		duration = 35 * 90;
		type = E_Timed;
	}
}

Class GZC_TimerBasedOnGoodHealth : GZC_TimerEffect
{
	override void eventFunc()
	{
		let event = GZC_Event.fetch();
		let player = players[consoleplayer].mo;
		event.list.timemodifier = max(0.01, 1 / (double(player.health) / 100.0));
	}
	
	override void closeFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 1.0;
	}
	
	override void init()
	{
		eventname = "More Health = Faster Timer";
		duration = 35 * 60 * 3;
		type = E_Timed;
	}
}

Class GZC_TimerBasedOnBadHealth : GZC_TimerEffect
{
	override void eventFunc()
	{
		let event = GZC_Event.fetch();
		let player = players[consoleplayer].mo;
		double ratio;
		if (player.health < 100)
		{
			ratio = (double(player.health) / 100.0 / 2.0) + 0.5;
		}
		else
		{
			ratio = (double(player.health) / 100.0);
		}
		event.list.timemodifier = ratio;
	}
	
	override void closeFunc()
	{
		let event = GZC_Event.fetch();
		event.list.timemodifier = 1.0;
	}
	
	override void init()
	{
		eventname = "Less Health = Faster Timer";
		duration = 35 * 60 * 3;
		type = E_Timed;
	}
}