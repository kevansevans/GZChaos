class GZC_Doom64Knockback : GZC_Effect
{
	Default
	{
		GZC_Effect.ignore false;
		GZC_Effect.title "Doom 64 Knockback";
		GZC_Effect.Duration 35 * 60 * 2;
	}
	
	override void onWorldThingSpawn(WorldEvent _event)
	{
		if (!_event.thing.bMissile) return;
		if (!(_event.thing.target is "PlayerPawn")) return;
		
		_event.thing.target.A_Recoil(2);
	}
	
	override bool onWorldHitscanPreFired(WorldEvent _event)
	{
		if (_event.thing is "PlayerPawn")
		{
			_event.thing.A_Recoil(2);
		}
		
		return false;
	}
}

class GZC_Doom64KnockbackEnemies : GZC_Effect
{
	Default
	{
		GZC_Effect.ignore false;
		GZC_Effect.title "Doom 64 Knockback for monsters";
		GZC_Effect.Duration 35 * 60 * 2;
	}
	
	override void onWorldThingSpawn(WorldEvent _event)
	{
		if (!_event.thing.bMissile) return;
		if (_event.thing.target is "PlayerPawn") return;
		
		_event.thing.target.A_Recoil(2);
	}
	
	override bool onWorldHitscanPreFired(WorldEvent _event)
	{
		if (!(_event.thing is "PlayerPawn"))
		{
			_event.thing.A_Recoil(2);
		}
		
		return false;
	}
}

class GZC_NegativeDoom64Knockback : GZC_Effect
{
	Default
	{
		GZC_Effect.ignore false;
		GZC_Effect.title "Negative Doom 64 Knockback";
		GZC_Effect.Duration 35 * 60 * 2;
	}
	
	override void onWorldThingSpawn(WorldEvent _event)
	{
		if (!_event.thing.bMissile) return;
		if (!(_event.thing.target is "PlayerPawn")) return;
		
		_event.thing.target.A_Recoil(-2);
	}
	
	override bool onWorldHitscanPreFired(WorldEvent _event)
	{
		if (_event.thing is "PlayerPawn")
		{
			_event.thing.A_Recoil(-2);
		}
		
		return false;
	}
}

class GZC_NegativeDoom64KnockbackEnemies : GZC_Effect
{
	Default
	{
		GZC_Effect.ignore false;
		GZC_Effect.title "Negative Doom 64 Knockback for monsters";
		GZC_Effect.Duration 35 * 60 * 2;
	}
	
	override void onWorldThingSpawn(WorldEvent _event)
	{
		if (!_event.thing.bMissile) return;
		if (_event.thing.target is "PlayerPawn") return;
		
		_event.thing.target.A_Recoil(-2);
	}
	
	override bool onWorldHitscanPreFired(WorldEvent _event)
	{
		if (!(_event.thing is "PlayerPawn"))
		{
			_event.thing.A_Recoil(-2);
		}
		
		return false;
	}
}

class GZC_InconsistentDoom64Knockback : GZC_Effect
{
	Default
	{
		GZC_Effect.ignore false;
		GZC_Effect.title "Inconsistent Doom 64 Knockback";
		GZC_Effect.Duration 35 * 60 * 2;
	}
	
	override void onWorldThingSpawn(WorldEvent _event)
	{
		if (!_event.thing.bMissile) return;
		if (!(_event.thing.target is "PlayerPawn")) return;
		
		double rnd = frandom(-2.0, 2.);
		_event.thing.target.A_Recoil(rnd);
	}
	
	override bool onWorldHitscanPreFired(WorldEvent _event)
	{
		if (_event.thing is "PlayerPawn")
		{
			double rnd = frandom(-2.0, 2.);
			_event.thing.A_Recoil(rnd);
		}
		
		return false;
	}
}

class GZC_FreezeTag : GZC_Effect
{
	Default
	{
		GZC_Effect.ignore false;
		GZC_Effect.title "Freeze tag";
		GZC_Effect.Duration 35 * 60 * 2;
	}
	
	override void onWorldThingSpawn(WorldEvent _event)
	{
		if (_event.thing.target is "PlayerPawn")
		{
			_event.thing.damageType = "Ice";
		}
		
		return;
	}
	
	override bool onWorldHitscanPreFired(WorldEvent _event)
	{
		if (_event.damageType != "Ice")
		{
			_event.thing.LineAttack(_event.attackangle, _event.attackdistance, _event.attackpitch, _event.damage, "Ice", _event.attackpufftype, _event.DamageFlags, null, _event.attackz, _event.AttackOffsetForward, _event.attackoffsetside); 
			return true;
		}
		
		return false;
	}
}