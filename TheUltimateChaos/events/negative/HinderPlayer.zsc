Class TUC_DisableForwardBackwards : TUC_Event
{
	double f1_move;
	double f2_move;

	override void eventFunc()
	{
		let player = players[consoleplayer].mo;
		
		f1_move = player.forwardMove1;
		f2_move = player.forwardMove2;
		
		player.forwardMove1 = player.forwardMove2 = 0;
		activated = true;
	}
	
	override void closeFunc()
	{
		let player = players[consoleplayer].mo;
		
		player.forwardMove1 = f1_move;
		player.forwardMove2 = f2_move;
	}
	
	Static TUC_Event create()
	{
		TUC_Event event = new('TUC_DisableForwardBackwards');
		event.eventname = "Disable Forward/Backwards movement";
		event.duration = 35 * 60;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_DisableStrafingMovement : TUC_Event
{
	double s1_move;
	double s2_move;

	override void eventFunc()
	{
		let player = players[consoleplayer].mo;
		
		s1_move = player.sideMove1;
		s2_move = player.sideMove2;
		
		player.sideMove1 = player.sideMove2 = 0;
		activated = true;
	}
	
	override void closeFunc()
	{
		let player = players[consoleplayer].mo;
		
		player.sideMove1 = s1_move;
		player.sideMove2 = s2_move;
	}
	
	Static TUC_Event create()
	{
		TUC_Event event = new('TUC_DisableStrafingMovement');
		event.eventname = "Disable strafing movement";
		event.duration = 35 * 30;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_ShrinkPickups : TUC_Event
{
	override void eventFunc()
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
	
		while ( (mo = Actor(it.Next ())) )
		{
			if (mo is 'inventory')
			{
				mo.scale.x = 0.1;
				mo.scale.y = 0.1;
			}
		}
	}
	
	override void closeFunc()
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
	
		while ( (mo = Actor(it.Next ())) )
		{
			if (mo is 'inventory')
			{
				mo.scale.x = 1;
				mo.scale.y = 1;
			}
		}
	}
	
	Static TUC_Event create()
	{
		TUC_Event event = new('TUC_ShrinkPickups');
		event.eventname = "What is this? A pickup for ants?";
		event.duration = 35 * 90;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_GameEndPlayer : TUC_Event
{
	int startframe;
	bool screm;

	override void eventFunc()
	{
		let player = players[consoleplayer].mo;
		if (!screm)
		{
			player.A_PlayerScream();
			screm = true;
		}
		if (gametic - startframe >= 35 * 1)
		{
			player.A_Explode(999, 64);
		}
	}
	
	override void closeFunc()
	{
	
	}

	Static TUC_Event create()
	{
		TUC_Event event = new('TUC_GameEndPlayer');
		TUC_GameEndPlayer(event).startframe = gametic;
		event.eventname = "Player commits suicide";
		event.duration = 35 * 90;
		event.type = E_HiddenTimer;
		return event;
	}
}