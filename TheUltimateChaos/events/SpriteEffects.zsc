Class TUC_TallWeaponSprites : TUC_Event
{
	override void eventFunc()
	{
		PlayerInfo player = players[consoleplayer];
		let def = getDefaultByType(Weapon(players[consoleplayer].readyWeapon).getClass());
		
		for (PSprite sprite = player.psprites; sprite != null; sprite = sprite.next)
		{
			sprite.scale.Y = def.WeaponScaleY * 3;
			sprite.scale.X = def.WeaponScaleX * 0.5;
			sprite.VAlign = PSPA_BOTTOM;
			sprite.HAlign = PSPA_CENTER;
		}
		
	}
	
	override void closeFunc()
	{
		PlayerInfo player = players[consoleplayer];
		let def = getDefaultByType(Weapon(players[consoleplayer].readyWeapon).getClass());
		
		for (PSprite sprite = player.psprites; sprite != null; sprite = sprite.next)
		{
			sprite.scale.y = def.WeaponScaleY;
			sprite.scale.x = def.WeaponScaleX;
			sprite.VAlign = PSPA_TOP;
			sprite.HAlign = PSPA_Left;
		}
	}
	
	static TUC_Event create()
	{
		TUC_Event event = new('TUC_TallWeaponSprites');
		event.eventname = "Tall and thin weapon sprites";
		event.duration = 35 * 60 * 2;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_WideWeaponSprites : TUC_Event
{
	override void eventFunc()
	{
		PlayerInfo player = players[consoleplayer];
		let def = getDefaultByType(Weapon(players[consoleplayer].readyWeapon).getClass());
		
		for (PSprite sprite = player.psprites; sprite != null; sprite = sprite.next)
		{
			sprite.scale.x = def.WeaponScaleX * 4;
			sprite.scale.Y = def.WeaponScaleY * 0.5;
			sprite.HAlign = PSPA_CENTER;
			sprite.VAlign = PSPA_BOTTOM;
		}
		
	}
	
	override void closeFunc()
	{
		PlayerInfo player = players[consoleplayer];
		let def = getDefaultByType(Weapon(players[consoleplayer].readyWeapon).getClass());
		
		for (PSprite sprite = player.psprites; sprite != null; sprite = sprite.next)
		{
			sprite.scale.x = def.WeaponScaleX;
			sprite.scale.y = def.WeaponScaleX;
			sprite.HAlign = PSPA_Left;
			sprite.VAlign = PSPA_TOP;
		}
	}
	
	static TUC_Event create()
	{
		TUC_Event event = new('TUC_WideWeaponSprites');
		event.eventname = "Wide and stout weapon sprites";
		event.duration = 35 * 60 * 2;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_SuperNintendoDoom : TUC_Event
{
	override void eventFunc()
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
		
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				mo.bSpriteAngle = true;
				mo.spriteAngle = 180;
			}	
		}
	}
	
	override void closeFunc()
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
		
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				mo.bSpriteAngle = false;
			}	
		}
	}
	
	static TUC_Event create()
	{
		TUC_Event event = new('TUC_SuperNintendoDoom');
		event.eventname = "Doom for the SNES";
		event.duration = 35 * 60 * 2;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_SpinningMonsters : TUC_Event
{
	int factor;

	override void eventFunc()
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
		
		while (!factor) 
		{
			factor = random(-15, 15);
		}
		
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				mo.bRollSprite = true;
				mo.bRollCenter = true;
				mo.roll += factor;
			}
		}
	}
	
	override void closeFunc() 
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
	
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				let def = getDefaultByType(mo.getClass());
				
				mo.bRollSprite = def.bRollSprite;
				mo.bRollCenter = def.bRollCenter;
				mo.roll = def.roll;
			}
		}
	}
	
	static TUC_Event create()
	{
		TUC_Event event = new('TUC_SpinningMonsters');
		event.eventname = "On a roll";
		event.duration = 35 * 60 * 2;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_WideMonsters : TUC_Event
{
	override void eventFunc()
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
	
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				mo.scale.x = 5;
			}
		}
	}
	
	override void closeFunc() 
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
	
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				mo.scale.x = 1;
			}
		}
	}
	
	static TUC_Event create()
	{
		TUC_Event event = new('TUC_WideMonsters');
		event.eventname = "Wide Monster sprites";
		event.duration = 35 * 90;
		event.type = E_Timed;
		return event;
	}
}

Class TUC_TallMonsters : TUC_Event
{
	override void eventFunc()
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
	
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				mo.scale.y = 7;
			}
		}
	}
	
	override void closeFunc() 
	{
		ThinkerIterator it = ThinkerIterator.Create("Actor");
		Actor mo;
	
		while ((mo = Actor(it.Next ())))
		{
			if (mo.bIsMonster)
			{
				mo.scale.y = 1;
			}
		}
	}
	
	static TUC_Event create()
	{
		TUC_Event event = new('TUC_TallMonsters');
		event.eventname = "Tall Monster sprites";
		event.duration = 35 * 90;
		event.type = E_Timed;
		return event;
	}
}